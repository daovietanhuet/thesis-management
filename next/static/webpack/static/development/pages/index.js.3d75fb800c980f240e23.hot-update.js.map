{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3d75fb800c980f240e23.hot-update.js","sources":["webpack:///./components/Table.js"],"sourcesContent":["import TableRow from './TableRow';\r\nimport request from '../assets/request';\r\n\r\nclass Table extends React.Component { \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      listThesis: [],\r\n      ownThesisInfo: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const res = await request('/thesis/info')\r\n    this.setState({listThesis: res.result, loading: false})\r\n    this.getOwnThesis()\r\n  }\r\n\r\n  render = () => {\r\n    const {onChange, filter, search, own} = this.props;\r\n    return (\r\n    <div className=\"table-container\">\r\n          <table className=\"table table-filter\">\r\n            <thead className=\"theadTitle\">\r\n              <tr>\r\n                <td colSpan={3}>Khóa luận</td>\r\n                <td>#</td>\r\n                <td style={{textAlign: \"left\"}}>Ngày cập nhật</td>\r\n                <td colSpan={2}>Hành động</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!this.state.loading? this.renderListThesis(search, filter, own) : this.renderLoading()}\r\n            </tbody>\r\n          </table>\r\n    </div>\r\n  )}\r\n\r\n  getOwnThesis() {\r\n    request('/thesis/info', 'GET', 'section=self')\r\n        .then (result => {\r\n          if(!result.result || !result.result[0] || result.result === [] || !result.httpCode === 200) this.setState({ownThesisInfo: []})\r\n          else this.setState({ownThesisInfo: result.result})\r\n        })\r\n  }\r\n\r\n  renderListThesis = (search, filter, own) => {\r\n    let check = false;\r\n    let list = this.state.listThesis;\r\n    if(own) list = this.state.ownThesisInfo;\r\n    let result = list.map((ele, index) => {\r\n        if( (ele.state === filter || (filter === 'ALL')) && ((ele.thesisSubject + `(${ele.thesisCode})`).includes(search)) )\r\n          return <TableRow {...ele} key={index}/>\r\n      })\r\n    for( let i = 0; i < result.length; i++) if(result[i]) check = true;\r\n    if(!check) return (\r\n      <tr>\r\n        <td colSpan=\"7\" style={{verticalAlign: \"center\", textAlign: \"center\", fontSize: \"3rem\", color: \"#ddd\"}} className=\"fadein_ele\">\r\n          <i className=\"fas fa-database\"></i> NO DATA\r\n        </td>\r\n      </tr>\r\n    )\r\n    else return result\r\n  }\r\n\r\n  renderLoading = () => {\r\n    return (\r\n      <tr>\r\n        <td colSpan=\"7\" style={{verticalAlign: \"center\", textAlign: \"center\"}} className=\"fadein_ele\">\r\n          <i className=\"fa fa-spinner fa-spin\"></i> Loading...\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AAeA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAlCA;AA4CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AA7DA;AA+DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AArEA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AA2BA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;AA1CA;AACA;AAyEA;;;;A","sourceRoot":""}